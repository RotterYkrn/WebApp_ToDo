import type { z } from 'zod';
export declare const DailyPlanItemSchema: z.ZodObject<{
    id: z.ZodNumber;
    dailyPlanId: z.ZodNumber;
    todoId: z.ZodNullable<z.ZodNumber>;
    habitId: z.ZodNullable<z.ZodNumber>;
    title: z.ZodString;
    description: z.ZodNullable<z.ZodString>;
    time: z.ZodNullable<z.ZodDate>;
    priority: z.ZodNullable<z.ZodNumber>;
    completed: z.ZodBoolean;
    order: z.ZodNumber;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id: number;
    createdAt: Date;
    updatedAt: Date;
    dailyPlanId: number;
    todoId: number | null;
    habitId: number | null;
    title: string;
    description: string | null;
    time: Date | null;
    priority: number | null;
    completed: boolean;
    order: number;
}, {
    id: number;
    createdAt: Date;
    updatedAt: Date;
    dailyPlanId: number;
    todoId: number | null;
    habitId: number | null;
    title: string;
    description: string | null;
    time: Date | null;
    priority: number | null;
    completed: boolean;
    order: number;
}>;
export type DailyPlanItem = z.infer<typeof DailyPlanItemSchema>;
export default DailyPlanItemSchema;
